var db = require('controllers/database');
var mongoose = require('mongoose');
var books = mongoose.model('books');
var advances = mongoose.model('advances');
var drivers = mongoose.model('drivers');
var method	= require('../../route/methods');

exports.addBookAdvanceWithRepeat = function(latitude,longitude,date,description,mon,tue,wed,thu,fri,sat,sun,callback){
  var datenew = new Date();
  var xdate = datenew.getDate() + "/"
    + (datenew.getMonth()+1)  + "/"
    + datenew.getFullYear() + " "
    + datenew.getHours() + ":"
    + datenew.getMinutes() + ":"
    + datenew.getSeconds();
  var newBook = new advances({latitude:latitude,longitude:longitude,dateBook:date,description:description,
    status:false,repeat:true,date:xdate,days:{mon:((mon=='true')?true:false),
      mon:((mon=='true')?true:false),tue:((tue=='true')?true:false),wed:((wed=='true')?true:false),
      thu:((thu=='true')?true:false),fri:((fri=='true')?true:false),sat:((sat=='true')?true:false),
      sun:((sun=='true')?true:false)}});
  newBook.save(function(err){
    if(err){
      callback({'res':false, 'response':"Error Book Advance, you have not added a new book."});
    }else{
      callback({'res':true, 'response':"Successfully Book Advance, you have added a new book."});
    }
  });
}

exports.addBookAdvanceWithoutRepeat = function(latitude,longitude,date,description,callback){
  var datenew = new Date();
  var xdate = datenew.getDate() + "/"
    + (datenew.getMonth()+1)  + "/"
    + datenew.getFullYear() + " "
    + datenew.getHours() + ":"
    + datenew.getMinutes() + ":"
    + datenew.getSeconds();
  var newBook = new advances({latitude:latitude,longitude:longitude,dateBook:date,description:description,
    status:false,repeat:false,date:xdate});
  newBook.save(function(err){
    if(err){
      callback({'res':false, 'response':"Error Book Advance, you have not added a new book."});
    }else{
      callback({'res':true, 'response':"Successfully Book Advance, you have added a new book."});
    }
  });
}

exports.addBook = function(tokenDriver,nameDriver,tokenClient,nameClient,originLatitude,originLongitude,desLatitude,desLongitude,pcourse,ptake,preturn,callback){
  var datenew = new Date();
  var xdate = datenew.getDate() + "/"
    + (datenew.getMonth()+1)  + "/"
    + datenew.getFullYear() + " "
    + datenew.getHours() + ":"
    + datenew.getMinutes() + ":"
    + datenew.getSeconds();
  var id = mongoose.Types.ObjectId();
  var newBook = new books({_id:id,date:xdate,value:10,tokenDriver:tokenDriver,nameDriver:nameDriver,tokenClient:tokenClient,nameClient:nameClient,
    originLatitude:originLatitude,originLongitude:originLongitude,desLatitude:desLatitude,desLongitude:desLongitude,
    pcourse:pcourse,ptake:ptake,preturn:preturn});
  newBook.save(function(err){
    if(err){
      callback({'res':false, 'response':"Error Book, you have not added a new book."});
    }else{
      callback({'res':true, 'response':"Successfully Book, you have added a new book.", '_id':id});
    }
  });
}

exports.addNote = function(idBook,tokenDriver,value,callback){
  books.update({_id:idBook},{$set:{value:value}},function(err){
    if(err){
      callback({'res':false, 'response':"Error Book, you have not added a new value."});
    }else{
      drivers.update({_id:tokenDriver},{$inc: {pt:value,ptt:20}},function(err){
        if(err){
					callback({'res':false, 'response':"Error Book, you have not added a new value."});
				}else{
					callback({'res':true, 'response':"Successfully Book, you have added a new value."});
				}
      });

    }
  });
}
